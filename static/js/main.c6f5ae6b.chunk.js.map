{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","markTodo","removeTodo","className","style","textDecoration","isDone","text","Button","variant","onClick","FormTodo","addTodo","React","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","todos","setTodos","newTodos","splice","map","Card","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAKA,SAASA,EAAT,GAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtC,OACC,sBAAKC,UAAU,OAAf,UACC,sBAAMC,MAAO,CAAEC,eAAgBN,EAAKO,OAAS,eAAiB,IAA9D,SAAoEP,EAAKQ,OAC1E,gCACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBAAMT,EAASD,IAA1D,eAA6E,IAC7E,cAACQ,EAAA,EAAD,CAAQC,QAAQ,iBAAiBC,QAAS,kBAAMR,EAAWF,IAA3D,qBAMF,SAASW,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACnB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OACC,eAACC,EAAA,EAAD,CAAMC,SARc,SAAAC,GACpBA,EAAEC,iBACGL,IACLH,EAAQG,GACRC,EAAS,MAIT,UACC,eAACC,EAAA,EAAKI,MAAN,WACC,cAACJ,EAAA,EAAKK,MAAN,UAAY,2CACZ,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOrB,UAAU,QAAQY,MAAOA,EAAOU,SAAU,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOX,QAAQY,YAAY,oBAEhH,cAACnB,EAAA,EAAD,CAAQC,QAAQ,eAAee,KAAK,SAApC,uBAqDYI,MA7Cf,WACC,MAA0Bf,IAAMC,SAAS,CACzC,CACAP,KAAM,eACND,QAAQ,KAHR,mBAAOuB,EAAP,KAAcC,EAAd,KAaK7B,EAAW,SAAAD,GAChB,IAAM+B,EAAQ,YAAOF,GACrBE,EAAS/B,GAAOM,QAAS,EACzBwB,EAASC,IAGJ7B,EAAa,SAAAF,GAClB,IAAM+B,EAAQ,YAAOF,GACrBE,EAASC,OAAOhC,EAAO,GACvB8B,EAASC,IAGV,OACA,qBAAK5B,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACC,oBAAIA,UAAU,mBAAd,8BACA,cAACQ,EAAD,CAAUC,QArBI,SAAAL,GACf,IAAMwB,EAAQ,sBAAOF,GAAP,CAAc,CAACtB,UAC7BuB,EAASC,MAoBR,8BACEF,EAAMI,KAAI,SAAClC,EAAMC,GAAP,OACV,cAACkC,EAAA,EAAD,UACC,cAACA,EAAA,EAAKC,KAAN,UACC,cAACrC,EAAD,CAAkBE,MAAOA,EAAOD,KAAMA,EAAME,SAAUA,EAAUC,WAAYA,GAAjEF,kBChEFoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6f5ae6b.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport { Button, Card, Form } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n\treturn (\n\t\t<div className=\"todo\">\n\t\t\t<span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\"}}>{todo.text}</span>\n\t\t<div>\n\t\t<Button variant=\"outline-success\" onClick={() => markTodo(index)}>/</Button>{' '}\n\t\t<Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>x</Button>\n\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction FormTodo({ addTodo }) {\n\tconst [value, setValue] = React.useState(\"\")\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tif (!value) return;\n\t\taddTodo(value)\n\t\tsetValue(\"\")\n\t};\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label><b>Add Todo</b></Form.Label>\n\t\t\t\t<Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new todo\"></Form.Control>\n\t\t\t</Form.Group>\n\t\t\t<Button variant=\"primary mb-3\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</Button>\n\t\t</Form>\n\t);\n}\n\n\nfunction App() {\n\tconst [todos, setTodos] = React.useState([\n\t{\n\ttext: 'Sample to do',\n\tisDone: false\n\t}\n])\n\n\nconst addTodo = text => {\n\tconst newTodos = [...todos, {text}]\n\tsetTodos(newTodos)\n}\n\nconst markTodo = index => {\n\tconst newTodos = [...todos]\n\tnewTodos[index].isDone = true\n\tsetTodos(newTodos)\n}\n\nconst removeTodo = index => {\n\tconst newTodos = [...todos]\n\tnewTodos.splice(index, 1)\n\tsetTodos(newTodos)\n};\n\nreturn (\n<div className=\"app\">\n\t<div className=\"container\">\n\t\t<h1 className=\"text-center mb=4\">Daily Tasks List</h1>\n\t\t<FormTodo addTodo={addTodo} />\n\t\t<div>\n\t\t\t{todos.map((todo, index) => (\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Todo key={index} index={index} todo={todo} markTodo={markTodo} removeTodo={removeTodo}/>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</div>\n\t</div>\n</div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}